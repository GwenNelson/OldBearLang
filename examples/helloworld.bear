(fun hello (name)
     (print "Hello, " name "\n"))

(fun fac (n)
      (if (< n 1)
            1 
            (* n (fac (- n 1)))))

(hello "BearLang user")

(print "Testing out some fun stuff\n")

(print "This s-expression for example covers"
       " multiple lines but should print out just one line\n")

(print "Since every lisp needs a factorial function, one is tested here\n"
       "\(fac 5\)=" (fac 5) "\n")

(print "We have a car that automatically figures out if the first param is a cons or not, for convenience\n")

(print "For example: \(car 1 2 3\) = "(car 1 2 3) "\n"
        "           \(car (3 4 5\)\) = "(car (3 4 5)) "\n")

(print "The same goes for cdr: \(cdr 1 2 3\) = "(cdr 1 2 3) "\n"
        "                     \(cdr (3 4 5\)\) = "(cdr (3 4 5)) "\n")

(print "The + operator works for both strings and integers:\n"
       "e.g \(+ 2 2\) = " (+ 2 2) "\n"
       "    \(+ \"two \" \"strings\") = \"" (+ "two " "strings") "\"\n")
